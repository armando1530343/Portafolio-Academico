
Desarrollo Experimental:

Para el desarrollo de este proyecto de graficacion fue utilizado el lenguaje de programacion de c++ junto con las librerias de Opengl.

Primero se uso la estrategia del manejo de archivos para la creacion de los mapaz del videojuego de los bloquez puzle. Para un nivel se crea un archivo con una matriz de caracteres como 0,1,2,3 etc., de acuerdo al numero de piezas en que se divida el rompecabezas. Tambien se crea un archivo para cada pieza de cada nivel solo con el caracter del identificador de la pieza como 1,2,3; el caracter 0 representa un espacio vacio del mapa el cual no se dibujar√°.

Para la lectura de estos archivos fue creada la clase llamada "Mapa.h" el cual tiene la funcion "generar_coords_mapa()" que lee la matriz de caracteres del nivel y retorna la las posiciones en las que seran graficados cada hexagonos, leyendo solo los caracteres diferentes de 0. Tambien la funcion "coords_mapa_bits_pieza()" que lee el archivo de las piezas del nivel y de igual manera guarda las posiciones graficadas de los hexagonos, y por ultimo la funcion "dibuja_hexagono()" que contiene las funciones de graficacion de opengl dibujando un hexagono con GL_POLYGON con la ayuda de los parametros de coordenadas X y Y.

En el archivo principal del proyecto, "proyecto.cpp", se manda llamar a la clase "Mapa.h", primero se creo un objeto de la clase mapa para cada nivel creado pasando como parametro el path del archivo nivel.txt "Mapa nivel = Mapa(path)", tambien se crea la variable "coords_mapa" que guarda las coordenadas del mapa del nivel indicado llamando a la funcion de la clase antes mencionada, para ello se usa "coords_mapa = generar_coords_mapa()", esta variable se usara para graficar los hexagonos del videojuego dentro de la funcion display(), recorriendo la variable matriz con dos ciclos "for" anidados y dentro llamando a la funcion "nivel.dibuja_hexagono(coords_mapa[x], coords_mapa[y])" con esto se le dan las coordenadas en las que seran dibujados. Se creo tambien el vector de "datos_piezas" que guarda las coordenadas para los hexagonos que se dibujaran debajo del mapa para cada pieza individual. A estas piezas se les da un color aleatorio para los hexagonos dibujados y son graficadas dentro de un PushMatrix para que todos los hexagonos de la pieza correspondiente se muevan juntos cuando se mande la orden del mouse. Una ves que se validan las funciones del mouse, se verifica arrastre de las piezas en el mapa, en caso de atinar al lugar correcto, se indicara en el mapa sombreando el espacio indicado para posicionar la pieza. En total se crearon un total de 10 niveles. 
